name: Deploy to Azure Kubernetes Service

on:
  push:
    branches:
      - master

env:
  DOCKER_REGISTRY: jsdockerpipelinesdemoacr.azurecr.io
  IMAGE_REPOSITORY: pipelinesjavascriptdockerdemo
  IMAGE_TAG: ${{ github.run_number }}
  IMAGE_PULL_SECRET: jsdockerpipelinesdemoacr40959045-auth
  K8S_NAMESPACE_FOR_PR: ${{ github.head_ref }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:latest
          build-args: |
            HTTP_PROXY=${{ secrets.HTTP_PROXY }}
            HTTPS_PROXY=${{ secrets.HTTPS_PROXY }}
            NO_PROXY=${{ secrets.NO_PROXY }}

      - name: Upload manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifests
          path: manifests

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: pipelinesjavascriptdockerdemo-1404.default
    steps:
      - name: Deploy to Kubernetes cluster
        uses: appleboy/kubectl-action@master
        with:
          args: |
            apply -f manifests/deployment.yml -f manifests/service.yml
            --namespace default
            --image-pull-secret ${{ env.IMAGE_PULL_SECRET }}
            --image ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy-pull-request:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: pipelinesjavascriptdockerdemo-1404.${{ env.K8S_NAMESPACE_FOR_PR }}
    if: github.event_name == 'pull_request'
    steps:
      - name: Create a new namespace for the pull request
        uses: appleboy/kubectl-action@master
        with:
          args: |
            apply -f - <<EOF
            apiVersion: v1
            kind: Namespace
            metadata:
              name: ${{ env.K8S_NAMESPACE_FOR_PR }}
            EOF

      - name: Deploy to the new namespace in the Kubernetes cluster
        uses: appleboy/kubectl-action@master
        with:
          args: |
            apply -f manifests/deployment.yml -f manifests/service.yml
            --namespace ${{ env.K8S_NAMESPACE_FOR_PR }}
            --image-pull-secret ${{ env.IMAGE_PULL_SECRET }}
            --image ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Get services in the new namespace
        id: get
        uses: appleboy/kubectl-action@master
        with:
          args: |
            get svc
            --namespace ${{ env.K8S_NAMESPACE_FOR_PR }}
            -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'
        continue-on-error: true

      - name: Set GitHub comment
        if: steps.get.outputs.kubectl-output != ''
        run: |
          url=$(echo "${{ steps.get.outputs.kubectl-output }}" | tr -d "'")
          message="Your review app has been deployed"
          message="${message} and is available at http://${url}.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
          echo "::set-output name=GITHUB_COMMENT::$message"
